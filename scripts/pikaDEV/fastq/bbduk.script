#!/bin/bash -l
##[RUN] WALLTIME	6:00:00
##[RUN] MEMORY	30gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	bbduk
##[RUN] ACCOUNT	default_project
##[VERSION] pikaDEV
##[HELP] This is a worker script: it uses SAMPLE parameters
##[HELP] This tool will trim adaptors and the poly a tail 
##[HELP] This scripts runtime is limited
##
##[HOWTO] #bbduk
##[HOWTO] #Create a data file (samples.txt), with a SAMPLE column
##[HOWTO] #This uses worker
##[HOWTO] module load worker
##[HOWTO] #start the module:
##[HOWTO] wsub -batch bbduk.pbs -data samples.txt 

##[HELP] Options:
##[HELP] genome: the genome used for the other steps in a pipeline (your adapters should be in ../../adapters/trimmomatic/TruSeq3-PE.fa for regular adapters, or in ../../adapters/rna_polyA/adapter_polyA.fa for 3 prime rna seq (like quantseq))
##[OPTIONS] genome	mandatory	sed 's:GENOME_DIR=\"\":GENOME_DIR=\"value\":g'
##[HELP] is_rna: yes if the rna trimming must be used (poly AAAA) (for quantseq)
##[OPTIONS] is_rna	optional	sed 's:IS_RNA=\"no\":IS_RNA=\"value\":g'
##[HELP] threads: the number of threads to use per job
##[OPTIONS] threads	optional	sed 's:THREADS=1:THREADS=value:g'

#loading the modules
#extra_modules
module load bbtools;

#setting all parameters (these could be changed)
PROJECT_DIR="";
SAMPLE_DIR="$PROJECT_DIR/fastq";
OUTPUT_DIR="$PROJECT_DIR/bbduk";
SCRATCH_DIR=~;
GENOME_DIR="";
THREADS=1;

#batchline

if [ "$IS_RNA" == "no" ];
then
	REF="ref=$GENOME_DIR/../../adapters/bbduk/truseq.fa.gz";
else
	REF="ref=$GENOME_DIR/../../adapters/rna_polyA/adapter_polyA.fa,$GENOME_DIR/../../adapters/bbduk/truseq.fa.gz";
fi 

#the actual script
JOBID="";
mkdir -p $SCRATCH_DIR/$JOBID;
TMPDIR=$SCRATCH_DIR/$JOBID;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

rsync -ahr $SAMPLE_DIR/$SAMPLE".R1.fastq.gz" .;
gunzip $SAMPLE".R1.fastq.gz"

bbduk.sh in=$SAMPLE".R1.fastq" out=$SAMPLE"_trimmed.R1.fastq" $REF k=13 ktrim=r forcetrimleft=11 useshortkmers=t mink=3 qtrim=t trimq=10 minlength=20;

rm $SAMPLE".R1.fastq";
mv $SAMPLE"_trimmed.R1.fastq" $SAMPLE".R1.fastq"
gzip $SAMPLE".R1.fastq"

mkdir -p $OUTPUT_DIR;
cd $OUTPUT_DIR;
rsync -ahr $TMP_DIR/* .;

rm -r $TMP_DIR;


