#!/bin/bash -l
##[RUN] WALLTIME	12:00:00
##[RUN] MEMORY	100gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	bwa_mapping_population
##[RUN] ACCOUNT	default_project
#This is a worker script: it uses the SAMPLE parameters
##[VERSION] pika 1701
##[HELP] This is a worker script: it uses SAMPLE parameters
##[HELP] This tool will map the reads to the reference genome
##[HELP] This script will use only one cpu per sample
##[HELP] This script runs only 2 minutes per 1M reads
##[HELP] This scripts needs to be edited: change the flash parameter, and the genome directory in the prolog file
##
##[HOWTO] #BWA mapping for populations
##[HOWTO] #Create a data file (samples.txt), with a SAMPLE column
##[HOWTO] #This uses worker
##[HOWTO] module load worker
##[HOWTO] #The script need to be edited: change the flash parameter
##[HOWTO] #The genome directory in the prolog file will need to be changed
##[HOWTO] #start the module:
##[HOWTO] wsub -batch bwa_mapping_population.pbs -data samples.txt -prolog bwa_mapping_population.prolog.sh
##[HOWTO] #When the THREADS variable in this script is changed, this can be ran as multithreaded population mapping, start like this (replace 20 with the number of given threads):
##[HOWTO] wsub -batch bwa_mapping_population.pbs -data samples.txt -prolog bwa_mapping_population.prolog.sh -threaded 20
##
##[HELP] Options:
##[HELP] genome: the genome to use (abriviation if known or full path)
##[OPTIONS] genome	mandatory	sed 's:GENOME_DIR=\"\":GENOME_DIR=\"value\":g'
##[HELP] bwa_options: change the options of the mapper (standard: )
##[OPTIONS] bwa_options	optional	sed "s:BWA_OPTIONS=\"\":BWA_OPTIONS=\"value\":g"


#loading the modules
#extra_modules
module load BWA
module load SAMtools
module load elprep
version_BWA="BWA"

#setting all parameters (these could be changed)
PROJECT_DIR="";
GENOME_DIR="";
SAMPLE_DIR="$PROJECT_DIR/raw";
OUTPUT_DIR="$PROJECT_DIR/mapped";
#this can be NO (for regular files), FLASH (for only flashed data) or BOTH (for both flashed and unflashed data)
FLASH="NO";
SCRATCH_DIR=~;
#This parameter can be changed for multithreaded mapping
THREADS="1";
BWA_OPTIONS=""


#the actual script
JOBID="";
mkdir -p $SCRATCH_DIR/$JOBID;
TMPDIR=$SCRATCH_DIR/$JOBID;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

rsync -ahrL $SAMPLE_DIR/$SAMPLE*.fastq.gz $TMP_DIR/;
gunzip *gz;
FASTQ_FILES="";
if [ -f $SAMPLE.R2.fastq ];
then 
	#paired end mapping
	FASTQ_FILES="$TMP_DIR/$SAMPLE.R1.fastq $TMP_DIR/$SAMPLE.R2.fastq";
else
	#single read mapping
	FASTQ_FILES="$TMP_DIR/$SAMPLE.R1.fastq";
fi

BWA_GENOME="$GENOME_DIR/$version_BWA/genome.fa";

bwa mem -t $THREADS -M -R "@RG\tID:$SAMPLE\tSM:$SAMPLE\tPL:illumina\tLB:$SAMPLE\tPU:$SAMPLE" $BWA_OPTIONS $BWA_GENOME $FASTQ_FILES | elprep /dev/stdin $SAMPLE".bam" --mark-duplicates --sorting-order coordinate --nr-of-threads $THREADS;
samtools index -b $SAMPLE.bam;

mkdir -p $OUTPUT_DIR;
cd $OUTPUT_DIR;
rsync -ahr $TMP_DIR/$SAMPLE* .;
rm -rf $TMP_DIR;

