#!/bin/bash -l
##[RUN] WALLTIME	12:00:00
##[RUN] MEMORY	100gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	bowtie_mapping
##[RUN] ACCOUNT	default_project
##[VERSION] pika 1701
##[HELP] This tool will map a single sample to the refrence genome
##[HELP] This script is multithreaded
##[HELP] This script runs around 2 minute for 1M reads
##[HELP] In this script the sample, and flash options need to be changed
##
##[HOWTO] #Bowtie
##[HOWTO] #The sample, flash and genome directory needs to be changed
##[HOWTO] #start the module:
##[HOWTO] qsub bowtie_mapping.pbs

##[HELP] Options:
##[HELP] genome: the genome to use (abriviation if known or full path)
##[OPTIONS] genome	mandatory	sed 's:GENOME_DIR=\"\":GENOME_DIR=\"value\":g'
##[HELP] bowtie_options: change the options of the mapper (standard: --local)
##[OPTIONS] bowtie_options	optional	sed "s:BOWTIE_OPTIONS=\"--local\":BOWTIE_OPTIONS=\"value\":g"



#loading the modules
#extra_modules
module load Bowtie2
module load SAMtools
module load elprep
version_Bowtie2="Bowtie2"

#setting all parameters (these could be changed)
PROJECT_DIR="";
GENOME_DIR="";
SAMPLE_DIR="$PROJECT_DIR/raw";
OUTPUT_DIR="$PROJECT_DIR/mapped";
#this can be NO (for regular files), FLASH (for only flashed data) or BOTH (for both flashed and unflashed data)
FLASH="NO";
SCRATCH_DIR=~;
SAMPLE="samplename";
THREADS="20";
#options can be --local or --end-to-end (more options see bowtie2 manual)
#local is ideal for genome data, end is ideal for gbs, quantseq, ...
BOWTIE_OPTIONS="--local";


#the actual script
JOBID="";
mkdir -p $SCRATCH_DIR/$JOBID;
TMPDIR=$SCRATCH_DIR/$JOBID;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

mkdir genome;
cd genome;
rsync -ahrL $GENOME_DIR/* .;

GENOME_DIR="$TMP_DIR/genome/genome";
BOWTIE_GENOME="$GENOME_DIR/$version_Bowtie2/genome";


#do the copy and the mapping
cd $TMP_DIR;

rsync -ahrL $SAMPLE_DIR/$SAMPLE*.fastq.gz $TMP_DIR/;
gunzip *gz;

FASTQ_FILES="";
if [ -f $SAMPLE.R2.fastq ];
then 
	#paired end mapping
	FASTQ_FILES="-1 $TMP_DIR/$SAMPLE.R1.fastq -2 $TMP_DIR/$SAMPLE.R2.fastq";
else
	#single read mapping
	FASTQ_FILES="$TMP_DIR/$SAMPLE.R1.fastq";
fi

bowtie2 -q -p $THREADS --seed 1 $BOWTIE_OPTIONS --rg-id $SAMPLE --rg ID:$SAMPLE --rg LB:$SAMPLE --rg SM:$SAMPLE --rg PU:$SAMPLE --rg PL:illumina --rg CN:GenomicsCoreLeuven -x $BOWTIE_GENOME $FASTQ_FILES > /dev/stdout 2> $SAMPLE.bowtie2.log | elprep /dev/stdin $SAMPLE".bam" --mark-duplicates --sorting-order coordinate --nr-of-threads $THREADS;
samtools index -b $SAMPLE".bam";



mkdir -p $OUTPUT_DIR;
cd $OUTPUT_DIR;
rsync -ahr $TMP_DIR/$SAMPLE* .;
rm -rf $TMP_DIR/$SAMPLE;
rm -rf $SCRATCH_DIR/genome;


