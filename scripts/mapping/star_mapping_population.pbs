#!/bin/bash -l
#PBS -l walltime=12:00:00
#PBS -l mem=100gb
#PBS -l nodes=10:ppn=20
#PBS -M MAIL
#PBS -m aeb
#PBS -N star_mapping_population
#PBS -A default_project
#This is a worker script: it uses the SAMPLE parameters
##[VERSION] pika 16.08
##[HELP] This is a worker script: it uses SAMPLE parameters
##[HELP] This tool will map the reads to the reference genome
##[HELP] This script will use only one cpu per sample
##[HELP] This script runs only 2 minutes per 1M reads
##[HELP] This scripts needs to be edited: change the flash parameter, and the genome directory in the prolog file
##
##[HOWTO] #STAR mapping for populations
##[HOWTO] #Create a data file (samples.txt), with a SAMPLE column
##[HOWTO] #This uses the 2015a (there can be a more recent worker installed)
##[HOWTO] module load worker
##[HOWTO] #The script need to be edited: change the flash parameter
##[HOWTO] #The genome directory in the prolog file will need to be changed
##[HOWTO] #When the THREADS variable in this script is changed, this can be ran as multithreaded population mapping, start like this (replace 20 with the number of given threads) (standard multithreaded):
##[HOWTO] wsub -batch star_mapping_population.pbs -data samples.txt -prolog star_mapping_population.prolog.sh -threaded 20
##
##[HELP] Options:
##[HELP] genome: the genome to use (abriviation if known or full path)
##[OPTIONS] genome	mandatory	sed 's:GENOME_DIR=\"\":GENOME_DIR=\"value\":g'

#loading the modules
#extra_modules
module use /apps/leuven/thinking/2015a/modules/all 
module use /staging/leuven/stg_00019/software/modulefiles
module load STAR/2.5.2b-GCC_4.9.2
module load SAMtools/1.1-intel-2015a
module load picard/2.2.2-Java1.8.0_77

#setting all parameters (these could be changed)
PROJECT_DIR="";
SAMPLE_DIR="$PROJECT_DIR/trimmomatic";
OUTPUT_DIR="$PROJECT_DIR/mapped";
SCRATCH_DIR=~;
GENOME_DIR="$SCRATCH_DIR/tmp.$PBS_JOBID";
#This parameter can be changed for multithreaded mapping
THREADS="20";


#the actual script
mkdir -p  "$SCRATCH_DIR/$PBS_JOBID";
TMPDIR="$SCRATCH_DIR/$PBS_JOBID";
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

rsync -ahrL $SAMPLE_DIR/$SAMPLE*.fastq.gz $TMP_DIR/;
gunzip *gz;
FASTQ_FILES="";

STAR --runMode alignReads --runThreadN $THREADS --genomeDir $GENOME_DIR --readFilesIn $SAMPLE.R1.fastq --outSAMtype BAM SortedByCoordinate --outFileNamePrefix $TMP_DIR/$SAMPLE;
rm *fastq;

#samtools view -bS -@ $THREADS $TMP_DIR/mapped.sam > $TMP_DIR/mapped.bam;
#rm -r $TMP_DIR/mapped.sam;
#samtools sort -@ $THREADS $TMP_DIR/mapped.bam $TMP_DIR/$SAMPLE.sorted;
mv $SAMPLE"Aligned.sortedByCoord.out.bam" $SAMPLE".bam";
samtools index -b $TMP_DIR/$SAMPLE.bam;
#rm -r $TMP_DIR/mapped.bam;

#run picard tools for correcting readgroups...
picard AddOrReplaceReadGroups I=$TMP_DIR/$SAMPLE.sorted.bam O=$TMP_DIR/$SAMPLE.bam RGID=$SAMPLE RGLB=$SAMPLE RGPL=illumina RGSM=$SAMPLE RGPU=$SAMPLE RGCN=GenomicsCoreLeuven CREATE_INDEX=TRUE;

#rm $TMP_DIR/$SAMPLE.sorted.bam;

mkdir -p $OUTPUT_DIR;
cd $OUTPUT_DIR;
rsync -ahr $TMP_DIR/$SAMPLE* .;
rm -rf $TMP_DIR;



