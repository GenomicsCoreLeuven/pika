#!/bin/bash -l
##[RUN] WALLTIME	12:00:00
##[RUN] MEMORY	50gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	varscan
##[RUN] ACCOUNT	default_project
##[VERSION] pika1804
##[HELP] This script will run varscan2 on a mpileup file. This is ideal to do variant calling on pacbio data.
##[HELP] Output are varscan files and vcf files.
##
##[HOWTO] #VarScan2
##[HOWTO] #This script calls variants using VarScan2
##[HOWTO] #The command needed to execute is:
##[HOWTO] pikasub varscan.pbs
##[HOWTO] #Ideal is to test different parameters for the mpileup and varscan.
##
##[HELP] Options:
##[HELP] varscan_options: the options for varscan (standard= --min-avg-qual 0 --min-coverage 100 --min-freq-for-hom 0.8)
##[OPTIONS] varscan_options	optional	sed "s:VARSCAN_OPTIONS=\"--min-avg-qual 0 --min-coverage 100 --min-freq-for-hom 0.8\":VARSCAN_OPTIONS=\"value\":g"

#loading the modules
#extra_modules
module load VarScan

#setting all parameters (these could be changed)
PROJECT_DIR="";
SAMPLE_DIR="$PROJECT_DIR/mpileup";
OUTPUT_DIR="$PROJECT_DIR/varscan";
SCRATCH_DIR=~;
VARSCAN_OPTIONS="--min-avg-qual 0 --min-coverage 100 --min-freq-for-hom 0.8";

#the actual script
mkdir -p $SCRATCH_DIR;
TMPDIR=$SCRATCH_DIR;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

rsync -ahrL $SAMPLE_DIR/result.mpileup .;

#doing the variant calling
VarScan mpileup2cns result.mpileup $VARSCAN_OPTIONS > result.varscan
VarScan mpileup2cns result.mpileup $VARSCAN_OPTIONS --variants > result_variants_only.varscan

#creation of the vcf files
VarScan mpileup2cns result.mpileup $VARSCAN_OPTIONS --output-vcf > result.varscan.vcf
VarScan mpileup2cns result.mpileup $VARSCAN_OPTIONS --variants --output-vcf > result_variants_only.varscan.vcf

rm result.mpileup;

mkdir -p $OUTPUT_DIR;
rsync -ahrL $TMP_DIR/* $OUTPUT_DIR;
rm -r $TMP_DIR;
