#!/bin/bash -l
##[RUN] WALLTIME	12:00:00
##[RUN] MEMORY	50gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	htseq
##[RUN] ACCOUNT	default_project
##[VERSION] pika 16.08 
##[HELP] This script will generate a counts file, with the counts of given features
##[HELP] This script will use only one cpu
##[HELP] This script runs only a 1 minute per 1M reads
##
##[HOWTO] #HTSEQ-count
##[HOWTO] #Create a data file (samples.txt), with a SAMPLE column
##[HOWTO] #start the script:
##[HOWTO] pikasub htseq_scRNA.pbs
##

#loading the modules
module load SAMtools
module load HTSeq
module load parallel

#setting all directories
PROJECT_DIR="";
SAMPLE_DIR="$PROJECT_DIR/mapping";
OUTPUT_DIR="$PROJECT_DIR/HTSeq";
SCRATCH_DIR="$PROJECT_DIR/tmp";
GEN_DIR="";

#make a batch file
cd $SAMPLE_DIR;
ls -1 -d *.bam | sed 's:.bam::g' > bam_samples.txt;

NODEFILE=$PBS_NODEFILE;
if [ -z "$BATCH_FILE" ];
then
       #variable is empty or unset
       SAMPLE_FILE="$SAMPLE_DIR/bam_samples.txt";
else
       SAMPLE_FILE=$BATCH_FILE
fi

#the actual script
JOBID=$PBS_JOBID;

mkdir -p $SCRATCH_DIR/$JOBID;
TMPDIR=$SCRATCH_DIR/$JOBID;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

mkdir -p $OUTPUT_DIR;

#setting parallel environment
export PARALLEL="--workdir . --env PATH --env LD_LIBRARY_PATH --env LOADEDMODULES --env _LMFILES_ --env MODULE_VERSION --env MODULEPATH --env MODULEVERSION_STACK --env MODULESHOME --env OMP_DYNAMICS --env OMP_MAX_ACTIVE_LEVELS --env OMP_NESTED --env OMP_NUM_THREADS --env OMP_SCHEDULE --env OMP_STACKSIZE --env OMP_THREAD_LIMIT --env OMP_WAIT_POLICY";
#end setting parallel environment
PARALLEL_JOBS=1;
cat $NODEFILE | sort | uniq > nodefile

for SAMPLE in `tail -n +1 $SAMPLE_FILE`;
do
       echo "
                cd $TMP_DIR;
                mkdir $SAMPLE;
                cd $SAMPLE;
                
                rsync -ahrL $SAMPLE_DIR/$SAMPLE.bam .;
                #check if copy success, else exit
                rc=\$?; if [[ \$rc != 0 ]]; then exit \$rc; fi
                
                #BAM to SAM manipulation
                samtools view -h $SAMPLE.bam > $SAMPLE".sam";
                #counting with no differentiation of strands
                htseq-count -m union --stranded no --idattr gene_name $SAMPLE".sam" $GEN_DIR/Homo_sapiens.GRCh38.88.gtf > $SAMPLE"_count.txt";
                
                mkdir -p $OUTPUT_DIR;
                rsync -ahr $SAMPLE"_count.txt" $OUTPUT_DIR/;
                #check if copy succes, else exit
                rc=\$?; if [[ \$rc != 0 ]]; then exit \$rc; fi		
                
                  rm -r $TMP_DIR/$SAMPLE

       " >> $TMP_DIR/$SAMPLE.sh;
       echo "$TMP_DIR/$SAMPLE.sh" >> commands.txt
done

cat commands.txt | parallel --sshloginfile nodefile -j "$PARALLEL_JOBS" 'sh {} > {}.log 2> {}.err'

rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
