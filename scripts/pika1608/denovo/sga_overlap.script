#!/bin/bash -l
##[RUN] WALLTIME	3:00:00:00
##[RUN] MEMORY	120gb
##[RUN] NODES	1
##[RUN] CORES_PER_NODE	20
##[RUN] NAME	sga_overlaps
##[RUN] ACCOUNT	default_project
##[VERSION] pika 16.08 
##[HELP] This tool constructs the string graph of the merged reads
##[HELP] This script can be ran multithreaded (use the THREADS parameter)
##
##[HOWTO] #SGA overlap
##[HOWTO] #constructs the string graph
##[HOWTO] #start the module:
##[HOWTO] qsub sga_overlap.pbs
#extra_modules
module load SGA

PROJECT_DIR="";
SAMPLE_DIR="$PROJECT_DIR/sga_fmmerge";
OUTPUT_DIR="$PROJECT_DIR/sga_overlap";
SCRATCH_DIR="$PROJECT_DIR/tmp/sga_overlap_output";
THREADS="20";
#parameters discribed in the example:
OVERLAP_OPTIONS="-m 65";
#OVERLAP_OPTIONS:"-m 65"; #which is the minimum overlap to merge

#the script
JOBID="";
mkdir -p $SCRATCH_DIR/$JOBID;
TMPDIR=$SCRATCH_DIR/$JOBID;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
cd $TMP_DIR;

rsync -ahrL $SAMPLE_DIR/* .;
gunzip *;

sga overlap $OVERLAP_OPTIONS -t $THREADS final.filter.pass.merged.rmdup.fa;
rm final.filter.pass.merged.rmdup.fa;

mkdir -p $OUTPUT_DIR;
rsync -ahr $TMP_DIR/* $OUTPUT_DIR/;
rm -rf $TMP_DIR;
