#!/bin/bash -l
#PBS -l walltime=12:00:00
#PBS -l mem=50gb
#PBS -l nodes=1:ppn=20
#PBS -M MAIL
#PBS -m aeb
#PBS -N htseq
#PBS -A default_project
##[VERSION] pika 16.08 
##[HELP] This is a worker script: it uses SAMPLE parameters
##[HELP] This script will generate a counts file, with the counts of given features
##[HELP] This script will use only one cpu
##[HELP] This script runs only a 1 minute per 1M reads
##
##[HOWTO] #HTSEQ-count
##[HOWTO] #Create a data file (samples.txt), with a SAMPLE column
##[HOWTO] #This uses the 2014a (there can be a more resent worker installed)
##[HOWTO] module load worker/1.5.2-intel-2014a
##[HOWTO] #start the module:
##[HOWTO] wsub -batch htseq.pbs -data samples.txt

#loading the modules
module load SAMtools/0.1.19-intel-2014a;
module load HTSeq/0.6.1p1-intel-2014a-Python-2.7.6;

#setting all parameters (these could be changed)
PROJECT_DIR="";
GENOME_DIR="";
SAMPLE_DIR="$PROJECT_DIR/mapped";
OUTPUT_DIR="$PROJECT_DIR/htseq";
SCRATCH_DIR=$VSC_SCRATCH_NODE;
GENES_ANNOTATION_FILE="$GENOME_DIR/Ensembl/current/genes.gtf";
#strict (yes), flexible (no)
STRICT="yes";

#the actual script
mkdir -p $SCRATCH_DIR;
TMPDIR=$SCRATCH_DIR;
TMP_DIR=`mktemp -d -t tmp.XXXXXXXX`;
if [ "$STRICT" == "yes" ];
then
	HTSEQ_PARAM="-s no -a 10 -i gene_name -t gene -m union";
	OUTPUT_FILE_NAME="$SAMPLE.htseq_a10_genes_nostrand_union.counts";
else
	HTSEQ_PARAM="-s yes -a 0 -i gene_name -t gene -m intersection-nonempty";
	OUTPUT_FILE_NAME="$SAMPLE.htseq_a0_genes_strand_intersectionNonempty.counts";
fi

cd $TMP_DIR;
rsync -ahr $SAMPLE_DIR/$SAMPLE.bam .;

#BAM to SAM
samtools view $SAMPLE.bam > $SAMPLE.sam;
#COUNT REGIONS
htseq-count $HTSEQ_PARAM $SAMPLE.sam $GENES_ANNOTATION_FILE > $OUTPUT_FILE_NAME

mkdir -p $OUTPUT_DIR;
cd $OUTPUT_DIR;
rsync -ahr $TMP_DIR/$OUTPUT_FILE_NAME .;

rm -r $TMP_DIR;


